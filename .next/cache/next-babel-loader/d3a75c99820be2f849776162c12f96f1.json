{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // const PostCountry = (props) => (\n//     <div>\n//         <Link as={`/${props.id}`} href={`/selectedCountry?countryName=${props.title}`}>\n//             <a>{props.title}</a>\n//         </Link>\n//     </div>\n// );\n// export default () => (\n//     <Layout>\n//         <div>\n//             <h1>index.js</h1>\n//             <hr></hr>\n//                 <PostCountry id='country1' title='Greece' />\n//                 <PostCountry id='country2' title='South Africa' />\n//                 <PostCountry id='country3' title='The UK' />\n//         </div>\n//     </Layout>\n// );\n// export default (props) => (\n//     <Layout>\n//         <div>\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n//             {props.countryData.map(({country}) => (\n//                 <Link as={`/${country}`} href={`/selectedCountry?country=${country}`} >\n//                     <a>{country}</a>\n//                 </Link>\n//             ))}\n//         </div>\n//     </Layout>\n// );\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"REST Countries API Home\"), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })));\n};\n\n_c = Index;\n\n__jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }\n}, props.shows.map(function (_ref) {\n  var show = _ref.show;\n  return __jsx(\"li\", {\n    key: show.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    as: \"/p/\".concat(show.id),\n    href: \"/post?id=\".concat(show.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, show.name)));\n}));\n\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var result, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n\n        case 2:\n          result = _context.sent;\n          _context.next = 5;\n          return result.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Country Data Successfully Fetched! Length of Data is: \".concat(data.length));\n          console.log(\"  \");\n          console.log(\"Country Data: \".concat(JSON.stringify(data))); // console.log(`  `);\n          // console.log(`TypeOf CountryData: ${typeof countryData}`)\n\n          return _context.abrupt(\"return\", {\n            countryData: data\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index; // import Layout from '../components/MyLayout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n//   console.log(`Show data fetched. Count: ${data.length}`)\n//   return {\n//     shows: data\n//   }\n// }\n// export default Index\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","result","json","data","console","log","length","JSON","stringify","countryData"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADU;AAAA,CAAd;;KAAMD,K;;AAuBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,SACf;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,IAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,IAAT,CADF,CADF,CADe;AAAA,CAAhB,CADH;;AAUJN,KAAK,CAACO,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAECR,KAAK,CAAC,kDAAD,CAFN;;AAAA;AAEdS,UAAAA,MAFc;AAAA;AAAA,iBAGDA,MAAM,CAACC,IAAP,EAHC;;AAAA;AAGdC,UAAAA,IAHc;AAKpBC,UAAAA,OAAO,CAACC,GAAR,iEAAqEF,IAAI,CAACG,MAA1E;AACAF,UAAAA,OAAO,CAACC,GAAR;AACAD,UAAAA,OAAO,CAACC,GAAR,yBAA6BE,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA7B,GAPoB,CAQpB;AACA;;AAToB,2CAWb;AACHM,YAAAA,WAAW,EAAEN;AADV,WAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAiBA,eAAeV,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\n// const PostCountry = (props) => (\n//     <div>\n//         <Link as={`/${props.id}`} href={`/selectedCountry?countryName=${props.title}`}>\n//             <a>{props.title}</a>\n//         </Link>\n//     </div>\n// );\n\n// export default () => (\n//     <Layout>\n//         <div>\n\n//             <h1>index.js</h1>\n//             <hr></hr>\n\n//                 <PostCountry id='country1' title='Greece' />\n//                 <PostCountry id='country2' title='South Africa' />\n//                 <PostCountry id='country3' title='The UK' />\n//         </div>\n//     </Layout>\n// );\n\n// export default (props) => (\n//     <Layout>\n//         <div>\n\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n\n//             {props.countryData.map(({country}) => (\n//                 <Link as={`/${country}`} href={`/selectedCountry?country=${country}`} >\n//                     <a>{country}</a>\n//                 </Link>\n//             ))}\n\n//         </div>\n//     </Layout>\n// );\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            <h3>REST Countries API Home</h3>\n            <hr></hr>\n\n            {/* {JSON.stringify(props.countryData[0].name)} */}\n\n            {/* <ul>\n                 {props.countryData.map(({country}) => (\n                     <li>\n                        <Link as={`/${country.name}`} href={`/selectedCountry?country=${country.name}`} >\n                            <a>{country.name}</a>\n                        </Link>\n                     </li>\n                ))}\n            </ul> */}\n\n        </div>\n    </Layout>\n);\n\n    <ul>\n      {props.shows.map(({show}) => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n\nIndex.getInitialProps = async function() {\n\n    const result = await fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n    const data = await result.json();\n\n    console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n    console.log(`  `);\n    console.log(`Country Data: ${JSON.stringify(data)}`);\n    // console.log(`  `);\n    // console.log(`TypeOf CountryData: ${typeof countryData}`)\n\n    return {\n        countryData: data\n    };\n\n};\n\nexport default Index;\n\n// import Layout from '../components/MyLayout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n\n//   console.log(`Show data fetched. Count: ${data.length}`)\n\n//   return {\n//     shows: data\n//   }\n// }\n\n// export default Index"]},"metadata":{},"sourceType":"module"}