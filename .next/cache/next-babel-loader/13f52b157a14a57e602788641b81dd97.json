{"ast":null,"code":"var _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // const PostCountry = (props) => (\n//     <div>\n//         <Link as={`/${props.id}`} href={`/selectedCountry?countryName=${props.title}`}>\n//             <a>{props.title}</a>\n//         </Link>\n//     </div>\n// );\n// export default () => (\n//     <Layout>\n//         <div>\n//             <h1>index.js</h1>\n//             <hr></hr>\n//                 <PostCountry id='country1' title='Greece' />\n//                 <PostCountry id='country2' title='South Africa' />\n//                 <PostCountry id='country3' title='The UK' />\n//         </div>\n//     </Layout>\n// );\n// export default (props) => (\n//     <Layout>\n//         <div>\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n//             {props.countryData.map(({country}) => (\n//                 <Link as={`/${country}`} href={`/selectedCountry?country=${country}`} >\n//                     <a>{country}</a>\n//                 </Link>\n//             ))}\n//         </div>\n//     </Layout>\n// );\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }\n}, __jsx(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }\n}, \"REST Countries API Home\"), __jsx(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }\n})));\n\nIndex.getInitialProps = async function () {\n  const result = await fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n  const countryData = await result.json();\n  console.log(`Country Data Successfully Fetched! Length of Data is: ${countryData.length}`);\n  console.log(`  `);\n  console.log(`Country Data: ${JSON.stringify(countryData)}`); // console.log(`  `);\n  // console.log(`TypeOf CountryData: ${typeof countryData}`)\n  // return {\n  //     countryData: countryData\n  // };\n\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, props.countryData.map(({\n    country\n  }) => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }\n  }, __jsx(Link, {\n    as: `/${country.name}`,\n    href: `/selectedCountry?country=${country.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, country.name)))));\n};\n\nexport default Index; // import Layout from '../components/MyLayout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n//   console.log(`Show data fetched. Count: ${data.length}`)\n//   return {\n//     shows: data\n//   }\n// }\n// export default Index","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Index","props","getInitialProps","result","countryData","json","console","log","length","JSON","stringify","map","country","name"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADJ,CADJ;;AAqBAD,KAAK,CAACE,eAAN,GAAwB,kBAAiB;AAErC,QAAMC,MAAM,GAAG,MAAMJ,KAAK,CAAC,kDAAD,CAA1B;AACA,QAAMK,WAAW,GAAG,MAAMD,MAAM,CAACE,IAAP,EAA1B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,yDAAwDH,WAAW,CAACI,MAAO,EAAxF;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAb;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBE,IAAI,CAACC,SAAL,CAAeN,WAAf,CAA4B,EAAzD,EAPqC,CAQrC;AACA;AAEA;AACA;AACA;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACUH,KAAK,CAACG,WAAN,CAAkBO,GAAlB,CAAsB,CAAC;AAACC,IAAAA;AAAD,GAAD,KACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,IAAD;AAAM,IAAA,EAAE,EAAG,IAAGA,OAAO,CAACC,IAAK,EAA3B;AAA8B,IAAA,IAAI,EAAG,4BAA2BD,OAAO,CAACC,IAAK,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,OAAO,CAACC,IAAZ,CADJ,CADH,CADH,CADV,CADJ;AAYH,CA3BD;;AA6BA,eAAeb,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\n// const PostCountry = (props) => (\n//     <div>\n//         <Link as={`/${props.id}`} href={`/selectedCountry?countryName=${props.title}`}>\n//             <a>{props.title}</a>\n//         </Link>\n//     </div>\n// );\n\n// export default () => (\n//     <Layout>\n//         <div>\n\n//             <h1>index.js</h1>\n//             <hr></hr>\n\n//                 <PostCountry id='country1' title='Greece' />\n//                 <PostCountry id='country2' title='South Africa' />\n//                 <PostCountry id='country3' title='The UK' />\n//         </div>\n//     </Layout>\n// );\n\n// export default (props) => (\n//     <Layout>\n//         <div>\n\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n\n//             {props.countryData.map(({country}) => (\n//                 <Link as={`/${country}`} href={`/selectedCountry?country=${country}`} >\n//                     <a>{country}</a>\n//                 </Link>\n//             ))}\n\n//         </div>\n//     </Layout>\n// );\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            <h3>REST Countries API Home</h3>\n            <hr></hr>\n\n            {/* <ul>\n                 {props.countryData.map(({country}) => (\n                     <li>\n                        <Link as={`/${country.name}`} href={`/selectedCountry?country=${country.name}`} >\n                            <a>{country.name}</a>\n                        </Link>\n                     </li>\n                ))}\n            </ul> */}\n\n        </div>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n\n    const result = await fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n    const countryData = await result.json();\n\n    console.log(`Country Data Successfully Fetched! Length of Data is: ${countryData.length}`);\n    console.log(`  `);\n    console.log(`Country Data: ${JSON.stringify(countryData)}`);\n    // console.log(`  `);\n    // console.log(`TypeOf CountryData: ${typeof countryData}`)\n\n    // return {\n    //     countryData: countryData\n    // };\n\n    return (\n        <ul>\n                 {props.countryData.map(({country}) => (\n                     <li>\n                        <Link as={`/${country.name}`} href={`/selectedCountry?country=${country.name}`} >\n                            <a>{country.name}</a>\n                        </Link>\n                     </li>\n                ))}\n            </ul>\n    );\n\n};\n\nexport default Index;\n\n// import Layout from '../components/MyLayout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n\n//   console.log(`Show data fetched. Count: ${data.length}`)\n\n//   return {\n//     shows: data\n//   }\n// }\n\n// export default Index"]},"metadata":{},"sourceType":"module"}