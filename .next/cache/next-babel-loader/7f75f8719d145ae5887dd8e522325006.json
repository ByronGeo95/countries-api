{"ast":null,"code":"var _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/americas.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe, faGlobeAmericas, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Americas = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }\n}), __jsx(\"h2\", {\n  style: {\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}, \" \", __jsx(FontAwesomeIcon, {\n  icon: faGlobe,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 47\n  }\n}), \" FILTER\"), __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}), __jsx(\"h3\", {\n  style: {\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }\n}, \" \", __jsx(FontAwesomeIcon, {\n  icon: faGlobeAmericas,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 47\n  }\n}), \" AMERICAS : \", props.americasData.length), __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}), __jsx(\"h5\", {\n  style: {\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }\n}, \" \", __jsx(FontAwesomeIcon, {\n  icon: faQuestionCircle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 47\n  }\n}), \"  CLICK ON A COUNTRY TO DISPLAY INFORMATION ABOUT IT\"), __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: '25px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }\n}), __jsx(Container, {\n  fluid: true,\n  style: {\n    height: '750px',\n    overflowY: 'scroll',\n    float: 'center',\n    textAlign: 'center',\n    marginleft: 0,\n    marginRight: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }\n}, __jsx(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 17\n  }\n}, props.americasData.map(({\n  alpha2Code,\n  name,\n  capital,\n  flag,\n  region,\n  subregion,\n  latlng,\n  area,\n  population,\n  timezones,\n  demonym,\n  callingCodes\n}) => __jsx(\"div\", {\n  className: \"col-md-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }\n}, __jsx(Link, {\n  as: `/${alpha2Code}`,\n  href: `/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&lat=${[latlng][0]}&lon=${[latlng][1]}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 29\n  }\n}, __jsx(\"a\", {\n  style: {\n    fontSize: '11px',\n    color: 'black',\n    textDecoration: 'none',\n    float: 'left',\n    textAlign: 'left'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 33\n  }\n}, \" \", __jsx(Image, {\n  src: flag,\n  style: {\n    width: '7.5%',\n    marginBottom: '4px',\n    marginRight: '5px',\n    float: 'left',\n    textAlign: 'left'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 142\n  }\n}), name)), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 29\n  }\n}), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 29\n  }\n}))))))); // Americas.getInitialProps = async function() {\n//     const result = await fetch('https://restcountries.com/v2/region/americas');\n//     const data = await result.json();\n//     return {\n//         americasData: data\n//     };\n// };\n\n\nAfrica.getInitialProps = async function () {\n  try {\n    const result = await fetch('https://restcountries.com/v2/region/africa');\n    const data = await result.json();\n    return {\n      africaData: data\n    };\n  } catch (err) {\n    console.log(`Error: ${err}`);\n    return {\n      africaData: null\n    };\n  }\n};\n\nexport default Americas; //https://restcountries.eu/rest/v2/region/americas (old)\n//https://restcountries.com/v2/region/americas (new)","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/americas.js"],"names":["Layout","Link","fetch","Container","Row","Image","FontAwesomeIcon","faGlobe","faGlobeAmericas","faQuestionCircle","Americas","props","backgroundColor","padding","marginTop","marginBottom","americasData","length","height","overflowY","float","textAlign","marginleft","marginRight","map","alpha2Code","name","capital","flag","region","subregion","latlng","area","population","timezones","demonym","callingCodes","fontSize","color","textDecoration","width","Africa","getInitialProps","result","data","json","africaData","err","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,gBAAnC,QAA2D,mCAA3D;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IACb,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAI,EAAA,KAAK,EAAE;AAAEC,IAAAA,eAAe,EAAE,OAAnB;AAA4BC,IAAAA,OAAO,EAAE,QAArC;AAA+CC,IAAAA,SAAS,EAAE,CAA1D;AAA6DC,IAAAA,YAAY,EAAE;AAA3E,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI;AAAI,EAAA,KAAK,EAAE;AAAEA,IAAAA,YAAY,EAAE;AAAhB,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkC,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAER,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlC,YAHJ,EAII;AAAI,EAAA,KAAK,EAAE;AAAEK,IAAAA,eAAe,EAAE,OAAnB;AAA4BC,IAAAA,OAAO,EAAE,QAArC;AAA+CC,IAAAA,SAAS,EAAE,CAA1D;AAA6DC,IAAAA,YAAY,EAAE;AAA3E,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKI;AAAI,EAAA,KAAK,EAAE;AAAEA,IAAAA,YAAY,EAAE;AAAhB,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkC,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAEP,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlC,kBAAyFG,KAAK,CAACK,YAAN,CAAmBC,MAA5G,CALJ,EAMI;AAAI,EAAA,KAAK,EAAE;AAAEL,IAAAA,eAAe,EAAE,OAAnB;AAA4BC,IAAAA,OAAO,EAAE,QAArC;AAA+CC,IAAAA,SAAS,EAAE,CAA1D;AAA6DC,IAAAA,YAAY,EAAE;AAA3E,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,EAOI;AAAI,EAAA,KAAK,EAAE;AAAEA,IAAAA,YAAY,EAAE;AAAhB,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkC,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAEN,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlC,yDAPJ,EAQI;AAAI,EAAA,KAAK,EAAE;AAAEG,IAAAA,eAAe,EAAE,OAAnB;AAA4BC,IAAAA,OAAO,EAAE,QAArC;AAA+CC,IAAAA,SAAS,EAAE,CAA1D;AAA6DC,IAAAA,YAAY,EAAE;AAA3E,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARJ,EASI,MAAC,SAAD;AAAW,EAAA,KAAK,MAAhB;AAAiB,EAAA,KAAK,EAAE;AAAEG,IAAAA,MAAM,EAAE,OAAV;AAAmBC,IAAAA,SAAS,EAAE,QAA9B;AAAwCC,IAAAA,KAAK,EAAE,QAA/C;AAAyDC,IAAAA,SAAS,EAAE,QAApE;AAA8EC,IAAAA,UAAU,EAAE,CAA1F;AAA6FC,IAAAA,WAAW,EAAE;AAA1G,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKZ,KAAK,CAACK,YAAN,CAAmBQ,GAAnB,CAAuB,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA,IAA7B;AAAmCC,EAAAA,MAAnC;AAA2CC,EAAAA,SAA3C;AAAsDC,EAAAA,MAAtD;AAA8DC,EAAAA,IAA9D;AAAoEC,EAAAA,UAApE;AAAgFC,EAAAA,SAAhF;AAA2FC,EAAAA,OAA3F;AAAoGC,EAAAA;AAApG,CAAD,KACpB;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,EAAE,EAAG,IAAGX,UAAW,EAAzB;AAA4B,EAAA,IAAI,EAAG,+BAA8BA,UAAW,SAAQC,IAAK,YAAWC,OAAQ,SAAQC,IAAK,cAAaC,MAAO,WAAUC,SAAU,QAAO,CAACC,MAAD,EAAS,CAAT,CAAY,QAAO,CAACA,MAAD,EAAS,CAAT,CAAY,SAAQC,IAAK,eAAcC,UAAW,aAAYC,SAAS,CAAC,CAAD,CAAI,YAAWC,OAAQ,gBAAeC,YAAY,CAAC,CAAD,CAAI,EAAxT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,MAAZ;AAAoBC,IAAAA,KAAK,EAAE,OAA3B;AAAqCC,IAAAA,cAAc,EAAE,MAArD;AAA6DnB,IAAAA,KAAK,EAAE,MAApE;AAA4EC,IAAAA,SAAS,EAAE;AAAvF,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA6G,MAAC,KAAD;AAAO,EAAA,GAAG,EAAEO,IAAZ;AAAkB,EAAA,KAAK,EAAE;AAAEY,IAAAA,KAAK,EAAE,MAAT;AAAiBzB,IAAAA,YAAY,EAAE,KAA/B;AAAsCQ,IAAAA,WAAW,EAAE,KAAnD;AAA0DH,IAAAA,KAAK,EAAE,MAAjE;AAAyEC,IAAAA,SAAS,EAAE;AAApF,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA7G,EAAuOK,IAAvO,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CADH,CADL,CADJ,CATJ,CADJ,CADJ,C,CA6BA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;;AAEAe,MAAM,CAACC,eAAP,GAAyB,kBAAiB;AACtC,MACA;AACI,UAAMC,MAAM,GAAG,MAAMzC,KAAK,CAAC,4CAAD,CAA1B;AACA,UAAM0C,IAAI,GAAG,MAAMD,MAAM,CAACE,IAAP,EAAnB;AAEA,WAAO;AACHC,MAAAA,UAAU,EAAEF;AADT,KAAP;AAGH,GARD,CASA,OAAMG,GAAN,EACA;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B;AAEA,WAAO;AACHD,MAAAA,UAAU,EAAE;AADT,KAAP;AAGH;AAEJ,CAnBD;;AAqBA,eAAepC,QAAf,C,CAEA;AACA","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe, faGlobeAmericas, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Americas = (props) => (\n    <Layout>\n        <div>\n\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h2 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faGlobe} /> FILTER</h2>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h3 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faGlobeAmericas} /> AMERICAS : {props.americasData.length}</h3>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h5 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faQuestionCircle} />  CLICK ON A COUNTRY TO DISPLAY INFORMATION ABOUT IT</h5>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: '25px' }} ></hr>\n            <Container fluid style={{ height: '750px', overflowY: 'scroll', float: 'center', textAlign: 'center', marginleft: 0, marginRight: 0 }} >\n                <Row>\n                    {props.americasData.map(({ alpha2Code, name, capital, flag, region, subregion, latlng, area, population, timezones, demonym, callingCodes }) => (\n                        <div className='col-md-3' >\n                            <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&lat=${[latlng][0]}&lon=${[latlng][1]}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`} >\n                                <a style={{ fontSize: '11px', color: 'black' , textDecoration: 'none', float: 'left', textAlign: 'left' }} > <Image src={flag} style={{ width: '7.5%', marginBottom: '4px', marginRight: '5px', float: 'left', textAlign: 'left' }} />{name}</a>\n                            </Link>\n                            <br></br>\n                            <br></br>\n                        </div> \n                    ))} \n                </Row>\n            </Container>\n\n        </div>\n    </Layout>\n);\n\n// Americas.getInitialProps = async function() {\n\n//     const result = await fetch('https://restcountries.com/v2/region/americas');\n//     const data = await result.json();\n\n//     return {\n//         americasData: data\n//     };\n\n// };\n\nAfrica.getInitialProps = async function() {\n    try\n    {\n        const result = await fetch('https://restcountries.com/v2/region/africa');\n        const data = await result.json();\n\n        return {\n            africaData: data\n        }; \n    }\n    catch(err)\n    {\n        console.log(`Error: ${err}`);\n        \n        return {\n            africaData: null\n        }\n    }\n\n};\n\nexport default Americas;\n\n//https://restcountries.eu/rest/v2/region/americas (old)\n//https://restcountries.com/v2/region/americas (new)"]},"metadata":{},"sourceType":"module"}