{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faGlobe, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"hr\", {\n    style: {\n      backgroundColor: 'black',\n      padding: '0.75px',\n      marginTop: 0,\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(FontAwesomeIcon, {\n    icon: faHome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 47\n    }\n  }), \" HOME\"), __jsx(\"hr\", {\n    style: {\n      backgroundColor: 'black',\n      padding: '0.75px',\n      marginTop: 0,\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), __jsx(\"h3\", {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(FontAwesomeIcon, {\n    icon: faGlobe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 47\n    }\n  }), \" ALL COUNTRIES : \", props.countryData.length), __jsx(\"hr\", {\n    style: {\n      backgroundColor: 'black',\n      padding: '0.75px',\n      marginTop: 0,\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), __jsx(\"h5\", {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(FontAwesomeIcon, {\n    icon: faQuestionCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 47\n    }\n  }), \"  CLICK ON A COUNTRY TO DISPLAY INFORMATION ABOUT IT\"), __jsx(\"hr\", {\n    style: {\n      backgroundColor: 'black',\n      padding: '0.75px',\n      marginTop: 0,\n      marginBottom: '25px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), __jsx(Container, {\n    fluid: true,\n    style: {\n      height: '750px',\n      overflowY: 'scroll',\n      \"float\": 'center',\n      textAlign: 'center',\n      marginleft: 'auto',\n      marginRight: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, props.countryData.map(function (_ref) {\n    var alpha2Code = _ref.alpha2Code,\n        name = _ref.name,\n        capital = _ref.capital,\n        flag = _ref.flag,\n        region = _ref.region,\n        subregion = _ref.subregion,\n        latlng = _ref.latlng,\n        area = _ref.area,\n        population = _ref.population,\n        timezones = _ref.timezones,\n        demonym = _ref.demonym,\n        callingCodes = _ref.callingCodes;\n    return __jsx(\"div\", {\n      className: \"col-md-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      as: \"/\".concat(alpha2Code),\n      href: \"/selectedCountry?alpha2Code=\".concat(alpha2Code, \"&name=\").concat(name, \"&capital=\").concat(capital, \"&flag=\").concat(flag, \"&continent=\").concat(region, \"&region=\").concat(subregion, \"&lat=\").concat(latlng, \"&lon=\").concat(latlng, \"&area=\").concat(area, \"&population=\").concat(population, \"&timezone=\").concat(timezones[0], \"&demonym=\").concat(demonym, \"&callingCode=\").concat(callingCodes[0]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      style: {\n        fontSize: '11px',\n        color: 'black',\n        textDecoration: 'none',\n        \"float\": 'left',\n        textAlign: 'left'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, \" \", __jsx(Image, {\n      src: flag,\n      style: {\n        width: '7.5%',\n        marginBottom: '4px',\n        marginRight: '5px',\n        \"float\": 'left',\n        textAlign: 'left'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 142\n      }\n    }), name)), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }));\n  }))), countryData && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n}; // Index.getInitialProps = async function() {\n//     const result = await fetch('https://restcountries.com/v2/all');\n//     const data = await result.json();\n//     return {\n//         countryData: data\n//     };\n// };\n\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var result, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://restcountries.com/v2/ll');\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return result.json();\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            countryData: data\n          });\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Error: \".concat(_context.t0));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 10]]);\n}));\nexport default Index; //https://restcountries.com/v2/all (new)\n//https://restcountries.eu/rest/v2/all (old)\n// async function getUserAsync(name) {\n//   try{\n//     let response = await fetch(`https://api.github.com/users/${name}`);\n//     return await response.json();\n//   }catch(err){\n//     console.error(err);\n//     // Handle errors here\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Container","Row","Image","FontAwesomeIcon","faHome","faGlobe","faQuestionCircle","Index","props","backgroundColor","padding","marginTop","marginBottom","countryData","length","height","overflowY","textAlign","marginleft","marginRight","map","alpha2Code","name","capital","flag","region","subregion","latlng","area","population","timezones","demonym","callingCodes","fontSize","color","textDecoration","width","getInitialProps","result","json","data","console","log"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faGlobe, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h2 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faHome} /> HOME</h2>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h3 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faGlobe} /> ALL COUNTRIES : {props.countryData.length}</h3>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h5 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faQuestionCircle} />  CLICK ON A COUNTRY TO DISPLAY INFORMATION ABOUT IT</h5>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: '25px' }} ></hr>\n            \n            <Container fluid style={{ height: '750px', overflowY: 'scroll', float: 'center', textAlign: 'center', marginleft: 'auto', marginRight: 'auto' }} >\n                <Row>\n                    {props.countryData.map(({ alpha2Code, name, capital, flag, region, subregion, latlng, area, population, timezones, demonym, callingCodes }) => (\n                        <div className='col-md-3' >\n                            <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&lat=${latlng}&lon=${latlng}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`} >\n                            {/* <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`} > */}\n                                <a style={{ fontSize: '11px', color: 'black' , textDecoration: 'none', float: 'left', textAlign: 'left' }} > <Image src={flag} style={{ width: '7.5%', marginBottom: '4px', marginRight: '5px', float: 'left', textAlign: 'left' }} />{name}</a>\n                            </Link>\n                            <br></br>\n                            <br></br>\n                        </div> \n                    ))} \n                </Row>\n            </Container>\n\n            {\n                countryData &&\n                <div>\n\n                </div>\n            }\n\n        </div>\n    </Layout>\n);\n\n// Index.getInitialProps = async function() {\n\n//     const result = await fetch('https://restcountries.com/v2/all');\n//     const data = await result.json();\n\n//     return {\n//         countryData: data\n//     };\n\n// };\n\nIndex.getInitialProps = async function() {\n    try\n    {\n        const result = await fetch('https://restcountries.com/v2/ll');\n        const data = await result.json();\n\n        return {\n            countryData: data\n        }; \n    }\n    catch(err)\n    {\n        console.log(`Error: ${err}`);\n    }\n\n};\n\nexport default Index;\n\n//https://restcountries.com/v2/all (new)\n//https://restcountries.eu/rest/v2/all (old)\n\n// async function getUserAsync(name) {\n//   try{\n//     let response = await fetch(`https://api.github.com/users/${name}`);\n//     return await response.json();\n//   }catch(err){\n//     console.error(err);\n//     // Handle errors here\n//   }\n// }"]},"metadata":{},"sourceType":"module"}