{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Layout from '../components/Layout.js';\n// import Link from 'next/link';\n// import fetch from 'isomorphic-unfetch';\n// const PostCountry = (props) => (\n//     <div>\n//         <Link as={`/${props.id}`} href={`/selectedCountry?countryName=${props.title}`}>\n//             <a>{props.title}</a>\n//         </Link>\n//     </div>\n// );\n// export default () => (\n//     <Layout>\n//         <div>\n//             <h1>index.js</h1>\n//             <hr></hr>\n//                 <PostCountry id='country1' title='Greece' />\n//                 <PostCountry id='country2' title='South Africa' />\n//                 <PostCountry id='country3' title='The UK' />\n//         </div>\n//     </Layout>\n// );\n// export default (props) => (\n//     <Layout>\n//         <div>\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n//             {props.countryData.map(({country}) => (\n//                 <Link as={`/${country}`} href={`/selectedCountry?country=${country}`} >\n//                     <a>{country}</a>\n//                 </Link>\n//             ))}\n//         </div>\n//     </Layout>\n// );\n// const Index = (props) => (\n//     <Layout>\n//         <div>\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n//             {/* {JSON.stringify(props.countryData[0].name)} */}\n//             <ul>\n//                  {props.countryData.map(({country}) => (\n//                      <li>\n//                         {/* <Link as={`/${country.name}`} href={`/selectedCountry?country=${country.name}`} >\n//                             <a>{country.name}</a>\n//                         </Link> */}\n//                         {country}\n//                      </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     </Layout>\n// );\n// <ul>\n//   {props.shows.map(({show}) => (\n//     <li key={show.id}>\n//       <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n//         <a>{show.name}</a>\n//       </Link>\n//     </li>\n//   ))}\n// </ul>\n// Index.getInitialProps = async function() {\n//     const result = await fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n//     const data = await result.json();\n//     console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n//     console.log(`  `);\n//     console.log(`Country Data: ${JSON.stringify(data)}`);\n//     // console.log(`  `);\n//     // console.log(`TypeOf CountryData: ${typeof countryData}`)\n//     return {\n//         countryData: data\n//     };\n// };\n// export default Index;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\n/*First of all we need to install isomorphic-unfetch. \nThat's the library we are going to use to fetch data. \nIt's a simple implementation of the browser fetch API, but works both in client and server environments. */\n\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, props.shows.map(function (_ref) {\n    var show = _ref.show;\n    return __jsx(\"li\", {\n      key: show.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, show.name)));\n  })));\n};\n/*In practice, we usually need to fetch data from a remote data source. \nNext.js comes with a standard API to fetch data for pages. \nWe do it using an async function called getInitialProps.\nWith that, we can fetch data for a given page via a remote data source and pass it as props to our page. \nWe can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\nIn the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACZ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB;AAAA,QAAEC,IAAF,QAAEA,IAAF;AAAA,WACf;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADe;AAAA,GAAhB,CADH,CAFF,CADY;AAAA,CAAd;AAeA;AACA;AACA;AACA;AACA;AACA;;;KApBMN,K;AAqBNA,KAAK,CAACO,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJR,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBS,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJsB,2CAMf;AACLX,YAAAA,KAAK,EAAEQ;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeV,KAAf","sourcesContent":["// import Layout from '../components/Layout.js';\n// import Link from 'next/link';\n// import fetch from 'isomorphic-unfetch';\n\n// const PostCountry = (props) => (\n//     <div>\n//         <Link as={`/${props.id}`} href={`/selectedCountry?countryName=${props.title}`}>\n//             <a>{props.title}</a>\n//         </Link>\n//     </div>\n// );\n\n// export default () => (\n//     <Layout>\n//         <div>\n\n//             <h1>index.js</h1>\n//             <hr></hr>\n\n//                 <PostCountry id='country1' title='Greece' />\n//                 <PostCountry id='country2' title='South Africa' />\n//                 <PostCountry id='country3' title='The UK' />\n//         </div>\n//     </Layout>\n// );\n\n// export default (props) => (\n//     <Layout>\n//         <div>\n\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n\n//             {props.countryData.map(({country}) => (\n//                 <Link as={`/${country}`} href={`/selectedCountry?country=${country}`} >\n//                     <a>{country}</a>\n//                 </Link>\n//             ))}\n\n//         </div>\n//     </Layout>\n// );\n\n// const Index = (props) => (\n//     <Layout>\n//         <div>\n\n//             <h3>REST Countries API Home</h3>\n//             <hr></hr>\n\n//             {/* {JSON.stringify(props.countryData[0].name)} */}\n\n//             <ul>\n//                  {props.countryData.map(({country}) => (\n//                      <li>\n//                         {/* <Link as={`/${country.name}`} href={`/selectedCountry?country=${country.name}`} >\n//                             <a>{country.name}</a>\n//                         </Link> */}\n//                         {country}\n//                      </li>\n//                 ))}\n//             </ul>\n\n//         </div>\n//     </Layout>\n// );\n\n    // <ul>\n    //   {props.shows.map(({show}) => (\n    //     <li key={show.id}>\n    //       <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n    //         <a>{show.name}</a>\n    //       </Link>\n    //     </li>\n    //   ))}\n    // </ul>\n\n// Index.getInitialProps = async function() {\n\n//     const result = await fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n//     const data = await result.json();\n\n//     console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n//     console.log(`  `);\n//     console.log(`Country Data: ${JSON.stringify(data)}`);\n//     // console.log(`  `);\n//     // console.log(`TypeOf CountryData: ${typeof countryData}`)\n\n//     return {\n//         countryData: data\n//     };\n\n// };\n\n// export default Index;\n\nimport Layout from '../components/Layout.js'\nimport Link from 'next/link'\n/*First of all we need to install isomorphic-unfetch. \nThat's the library we are going to use to fetch data. \nIt's a simple implementation of the browser fetch API, but works both in client and server environments. */\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = (props) => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(({show}) => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\n/*In practice, we usually need to fetch data from a remote data source. \nNext.js comes with a standard API to fetch data for pages. \nWe do it using an async function called getInitialProps.\nWith that, we can fetch data for a given page via a remote data source and pass it as props to our page. \nWe can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\nIn the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await res.json()\n\n  console.log(`Show data fetched. Count: ${data.length}`)\n\n  return {\n    shows: data\n  }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}