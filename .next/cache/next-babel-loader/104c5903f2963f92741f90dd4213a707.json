{"ast":null,"code":"var _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }\n}), __jsx(\"h2\", {\n  style: {\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}, \" \", __jsx(FontAwesomeIcon, {\n  icon: faHome,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 47\n  }\n}), \" HOME\"), __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: '25px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }\n}), __jsx(Form, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }\n}, __jsx(Form.Group, {\n  controlId: \"formBasicEmail\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, __jsx(Form.Label, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, \"Email address\"), __jsx(Form.Control, {\n  type: \"email\",\n  placeholder: \"Enter email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}), __jsx(Form.Text, {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, \"We'll never share your email with anyone else.\")), __jsx(Form.Group, {\n  controlId: \"formBasicPassword\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, __jsx(Form.Label, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}, \"Password\"), __jsx(Form.Control, {\n  type: \"password\",\n  placeholder: \"Password\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n})), __jsx(Form.Group, {\n  controlId: \"formBasicCheckbox\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, __jsx(Form.Check, {\n  type: \"checkbox\",\n  label: \"Check me out\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n})), __jsx(Button, {\n  variant: \"primary\",\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}, \"Submit\")), __jsx(Container, {\n  fluid: true,\n  style: {\n    width: '1350px',\n    float: 'center',\n    textAlign: 'center',\n    marginleft: 'auto',\n    marginRight: 'auto'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }\n}, __jsx(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }\n}, props.countryData.map(({\n  alpha2Code,\n  name,\n  capital,\n  flag,\n  region,\n  subregion,\n  latlng,\n  area,\n  population,\n  timezones,\n  demonym,\n  callingCodes\n}) => __jsx(\"div\", {\n  className: \"col-md-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }\n}, __jsx(Link, {\n  as: `/${alpha2Code}`,\n  href: `/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&lat=${latlng[0]}&lon=${latlng[1]}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 29\n  }\n}, __jsx(\"a\", {\n  style: {\n    fontSize: '11px',\n    color: 'black',\n    textDecoration: 'none',\n    float: 'left',\n    textAlign: 'left'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 33\n  }\n}, \" \", __jsx(Image, {\n  src: flag,\n  style: {\n    width: '7.5%',\n    marginBottom: '4px',\n    marginRight: '5px',\n    float: 'left',\n    textAlign: 'left'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 141\n  }\n}), name)), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 29\n  }\n}), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 29\n  }\n})))))));\n\nIndex.getInitialProps = async function () {\n  const result = await fetch('https://restcountries.eu/rest/v2/all');\n  const data = await result.json();\n  console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n  console.log(`  `);\n  console.log(`Country Data: ${JSON.stringify(data)}`);\n  return {\n    countryData: data\n  };\n};\n\nconst userSearch = event => {\n  let userInput = event.target.value;\n  console.log(`userInput: ${userInput}`);\n};\n\nexport default Index; // import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n//   console.log(`Show data fetched. Count: ${data.length}`)\n//   return {\n//     shows: data\n//   }\n// }\n// export default Index","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Container","Row","Col","Image","Form","Button","FontAwesomeIcon","faHome","Index","props","backgroundColor","padding","marginTop","marginBottom","width","float","textAlign","marginleft","marginRight","countryData","map","alpha2Code","name","capital","flag","region","subregion","latlng","area","population","timezones","demonym","callingCodes","fontSize","color","textDecoration","getInitialProps","result","data","json","console","log","length","JSON","stringify","userSearch","event","userInput","target","value"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h2 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faHome} /> HOME</h2>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: '25px' }} ></hr>\n\n            <Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n            \n            <Container fluid style={{ width: '1350px', float: 'center', textAlign: 'center', marginleft: 'auto', marginRight: 'auto' }} >\n                <Row>\n                    {props.countryData.map(({ alpha2Code, name, capital, flag, region, subregion, latlng, area, population, timezones, demonym, callingCodes }) => (\n                        <div className='col-md-3'>\n                            <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&lat=${latlng[0]}&lon=${latlng[1]}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`} >\n                                <a style={{ fontSize: '11px', color: 'black', textDecoration: 'none', float: 'left', textAlign: 'left' }} > <Image src={flag} style={{ width: '7.5%', marginBottom: '4px', marginRight: '5px', float: 'left', textAlign: 'left' }} />{name}</a>\n                            </Link>\n                            <br></br>\n                            <br></br>\n                        </div> \n                    ))} \n                </Row>\n            </Container>\n\n        </div>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n\n    const result = await fetch('https://restcountries.eu/rest/v2/all');\n    const data = await result.json();\n\n    console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n    console.log(`  `);\n    console.log(`Country Data: ${JSON.stringify(data)}`);\n\n    return {\n        countryData: data\n    };\n\n};\n\nconst userSearch = (event) => {\n\n    let userInput = event.target.value;\n    console.log(`userInput: ${userInput}`);\n};\n\nexport default Index;\n\n// import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n\n//   console.log(`Show data fetched. Count: ${data.length}`)\n\n//   return {\n//     shows: data\n//   }\n// }\n\n// export default Index"]},"metadata":{},"sourceType":"module"}