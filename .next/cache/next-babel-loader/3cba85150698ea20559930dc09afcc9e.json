{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faGlobe, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, props.countryData && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"countryData\"), !props.countryData && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"no countryData\")));\n}; // Index.getInitialProps = async function() {\n//     const result = await fetch('https://restcountries.com/v2/all');\n//     const data = await result.json();\n//     return {\n//         countryData: data\n//     };\n// };\n\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var result, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://restcountries.com/v2/ll');\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return result.json();\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            countryData: data\n          });\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Error: \".concat(_context.t0));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 10]]);\n}));\nexport default Index; //https://restcountries.com/v2/all (new)\n//https://restcountries.eu/rest/v2/all (old)\n// async function getUserAsync(name) {\n//   try{\n//     let response = await fetch(`https://api.github.com/users/${name}`);\n//     return await response.json();\n//   }catch(err){\n//     console.error(err);\n//     // Handle errors here\n//   }\n// }\n//{/* <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`} > */}\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Container","Row","Image","FontAwesomeIcon","faHome","faGlobe","faQuestionCircle","Index","props","countryData","getInitialProps","result","json","data","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,gBAA1B,QAAkD,mCAAlD;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyBQA,KAAK,CAACC,WAAN,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1BR,EA+BQ,CAACD,KAAK,CAACC,WAAP,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhCR,CADJ,CADU;AAAA,CAAd,C,CA2CA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;;KApDMF,K;AAsDNA,KAAK,CAACG,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGKX,KAAK,CAAC,iCAAD,CAHV;;AAAA;AAGVY,UAAAA,MAHU;AAAA;AAAA,iBAIGA,MAAM,CAACC,IAAP,EAJH;;AAAA;AAIVC,UAAAA,IAJU;AAAA,2CAMT;AACHJ,YAAAA,WAAW,EAAEI;AADV,WANS;;AAAA;AAAA;AAAA;AAYhBC,UAAAA,OAAO,CAACC,GAAR;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAiBA,eAAeR,KAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faGlobe, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            {/* <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h2 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faHome} /> HOME</h2>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h3 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faGlobe} /> ALL COUNTRIES : {props.countryData.length}</h3>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h5 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faQuestionCircle} />  CLICK ON A COUNTRY TO DISPLAY INFORMATION ABOUT IT</h5>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: '25px' }} ></hr> */}\n            \n            {/* <Container fluid style={{ height: '750px', overflowY: 'scroll', float: 'center', textAlign: 'center', marginleft: 'auto', marginRight: 'auto' }} >\n                <Row>\n                    {props.countryData.map(({ alpha2Code, name, capital, flag, region, subregion, latlng, area, population, timezones, demonym, callingCodes }) => (\n                        <div className='col-md-3' >\n                            <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&lat=${latlng}&lon=${latlng}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`} >\n                                <a style={{ fontSize: '11px', color: 'black' , textDecoration: 'none', float: 'left', textAlign: 'left' }} > <Image src={flag} style={{ width: '7.5%', marginBottom: '4px', marginRight: '5px', float: 'left', textAlign: 'left' }} />{name}</a>\n                            </Link>\n                            <br></br>\n                            <br></br>\n                        </div> \n                    ))} \n                </Row>\n            </Container> */}\n\n            {\n                props.countryData &&\n                <div>\n                    countryData\n                </div>\n            }\n            {\n                !props.countryData &&\n                <div>\n                    no countryData\n                </div>\n            }\n\n        </div>\n    </Layout>\n);\n\n// Index.getInitialProps = async function() {\n\n//     const result = await fetch('https://restcountries.com/v2/all');\n//     const data = await result.json();\n\n//     return {\n//         countryData: data\n//     };\n\n// };\n\nIndex.getInitialProps = async function() {\n    try\n    {\n        const result = await fetch('https://restcountries.com/v2/ll');\n        const data = await result.json();\n\n        return {\n            countryData: data\n        }; \n    }\n    catch(err)\n    {\n        console.log(`Error: ${err}`);\n    }\n\n};\n\nexport default Index;\n\n//https://restcountries.com/v2/all (new)\n//https://restcountries.eu/rest/v2/all (old)\n\n// async function getUserAsync(name) {\n//   try{\n//     let response = await fetch(`https://api.github.com/users/${name}`);\n//     return await response.json();\n//   }catch(err){\n//     console.error(err);\n//     // Handle errors here\n//   }\n// }\n\n//{/* <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}&flag=${flag}&continent=${region}&region=${subregion}&area=${area}&population=${population}&timezone=${timezones[0]}&demonym=${demonym}&callingCode=${callingCodes[0]}`} > */}"]},"metadata":{},"sourceType":"module"}