{"ast":null,"code":"var _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}), __jsx(\"h2\", {\n  style: {\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}, \" \", __jsx(FontAwesomeIcon, {\n  icon: faHome,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 47\n  }\n}), \" HOME\"), __jsx(\"hr\", {\n  style: {\n    backgroundColor: 'black',\n    padding: '0.75px',\n    marginTop: 0,\n    marginBottom: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }\n}), __jsx(Row, {\n  style: {\n    width: '1325px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }\n}, props.countryData.map(({\n  alpha2Code,\n  name,\n  capital,\n  flag\n}) => __jsx(\"div\", {\n  className: \"col-md-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 33\n  }\n}, __jsx(Link, {\n  as: `/${alpha2Code}`,\n  href: `/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 37\n  }\n}, __jsx(\"a\", {\n  style: {\n    fontSize: '11px',\n    color: 'black',\n    textDecoration: 'none',\n    float: 'left',\n    textAlign: 'left'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 41\n  }\n}, \" \", __jsx(Image, {\n  src: flag,\n  style: {\n    width: '7.5%',\n    marginBottom: '4px',\n    marginRight: '5px',\n    float: 'left',\n    textAlign: 'left'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 149\n  }\n}), name)), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 37\n  }\n}), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 37\n  }\n}))))));\n\nIndex.getInitialProps = async function () {\n  const result = await fetch('https://restcountries.eu/rest/v2/all');\n  const data = await result.json();\n  console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n  console.log(`  `);\n  console.log(`Country Data: ${JSON.stringify(data)}`);\n  return {\n    countryData: data\n  };\n};\n\nexport default Index; // import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n//   console.log(`Show data fetched. Count: ${data.length}`)\n//   return {\n//     shows: data\n//   }\n// }\n// export default Index","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Container","Row","Col","Image","FontAwesomeIcon","faHome","Index","props","backgroundColor","padding","marginTop","marginBottom","width","countryData","map","alpha2Code","name","capital","flag","fontSize","color","textDecoration","float","textAlign","marginRight","getInitialProps","result","data","json","console","log","length","JSON","stringify"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAI,EAAA,KAAK,EAAE;AAAEC,IAAAA,eAAe,EAAE,OAAnB;AAA4BC,IAAAA,OAAO,EAAE,QAArC;AAA+CC,IAAAA,SAAS,EAAE,CAA1D;AAA6DC,IAAAA,YAAY,EAAE;AAA3E,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI;AAAI,EAAA,KAAK,EAAE;AAAEA,IAAAA,YAAY,EAAE;AAAhB,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkC,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAEN,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlC,UAHJ,EAII;AAAI,EAAA,KAAK,EAAE;AAAEG,IAAAA,eAAe,EAAE,OAAnB;AAA4BC,IAAAA,OAAO,EAAE,QAArC;AAA+CC,IAAAA,SAAS,EAAE,CAA1D;AAA6DC,IAAAA,YAAY,EAAE;AAA3E,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAQgB,MAAC,GAAD;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKL,KAAK,CAACM,WAAN,CAAkBC,GAAlB,CAAsB,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,MAAC,IAAD;AAAM,EAAA,EAAE,EAAG,IAAGH,UAAW,EAAzB;AAA4B,EAAA,IAAI,EAAG,+BAA8BA,UAAW,SAAQC,IAAK,YAAWC,OAAQ,EAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,KAAK,EAAE;AAAEE,IAAAA,QAAQ,EAAE,MAAZ;AAAoBC,IAAAA,KAAK,EAAE,OAA3B;AAAoCC,IAAAA,cAAc,EAAE,MAApD;AAA4DC,IAAAA,KAAK,EAAE,MAAnE;AAA2EC,IAAAA,SAAS,EAAE;AAAtF,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA4G,MAAC,KAAD;AAAO,EAAA,GAAG,EAAEL,IAAZ;AAAkB,EAAA,KAAK,EAAE;AAAEN,IAAAA,KAAK,EAAE,MAAT;AAAiBD,IAAAA,YAAY,EAAE,KAA/B;AAAsCa,IAAAA,WAAW,EAAE,KAAnD;AAA0DF,IAAAA,KAAK,EAAE,MAAjE;AAAyEC,IAAAA,SAAS,EAAE;AAApF,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA5G,EAAsOP,IAAtO,CADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,CADH,CADL,CARhB,CADJ,CADJ;;AA0CAV,KAAK,CAACmB,eAAN,GAAwB,kBAAiB;AAErC,QAAMC,MAAM,GAAG,MAAM3B,KAAK,CAAC,sCAAD,CAA1B;AACA,QAAM4B,IAAI,GAAG,MAAMD,MAAM,CAACE,IAAP,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,yDAAwDH,IAAI,CAACI,MAAO,EAAjF;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAb;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBE,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAqB,EAAlD;AAEA,SAAO;AACHd,IAAAA,WAAW,EAAEc;AADV,GAAP;AAIH,CAbD;;AAeA,eAAerB,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            <h2 style={{ marginBottom: 0 }} > <FontAwesomeIcon icon={faHome} /> HOME</h2>\n            <hr style={{ backgroundColor: 'black', padding: '0.75px', marginTop: 0, marginBottom: 0 }} ></hr>\n            \n   \n                    {/* <Container fluid> */}\n                        <Row style={{ width: '1325px' }} >\n                            {props.countryData.map(({alpha2Code, name, capital, flag}) => (\n                                <div className='col-md-3'>\n                                    {/* <Image src={flag} style={{ width: '7.5%', marginBottom: '4px', marginRight: '5px', float: 'left', textAlign: 'left' }} /> */}\n                                    <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}`} >\n                                        <a style={{ fontSize: '11px', color: 'black', textDecoration: 'none', float: 'left', textAlign: 'left' }} > <Image src={flag} style={{ width: '7.5%', marginBottom: '4px', marginRight: '5px', float: 'left', textAlign: 'left' }} />{name}</a>\n                                    </Link>\n                                    <br></br>\n                                    <br></br>\n                                </div> \n                            ))} \n                        </Row>\n                        {/* <br></br>\n                        <br></br> */}\n                    {/* </Container> */}\n              \n     \n\n            {/* <ul>\n                 {props.countryData.map(({alpha2Code, name, capital}) => (\n                     <li>\n                        <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}`} >\n                            <a>{name}</a>\n                        </Link>\n                     </li>\n                ))}\n            </ul> */}\n\n        </div>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n\n    const result = await fetch('https://restcountries.eu/rest/v2/all');\n    const data = await result.json();\n\n    console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n    console.log(`  `);\n    console.log(`Country Data: ${JSON.stringify(data)}`);\n\n    return {\n        countryData: data\n    };\n\n};\n\nexport default Index;\n\n// import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n\n//   console.log(`Show data fetched. Count: ${data.length}`)\n\n//   return {\n//     shows: data\n//   }\n// }\n\n// export default Index"]},"metadata":{},"sourceType":"module"}