{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"REST Countries API : HOME\"), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, props.countryData.map(function (_ref) {\n    var alpha2Code = _ref.alpha2Code,\n        name = _ref.name,\n        capital = _ref.capital;\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 22\n      }\n    }, __jsx(Link, {\n      as: \"/\".concat(alpha2Code),\n      href: \"/selectedCountry?alpha2Code=\".concat(alpha2Code, \"&name=\").concat(name, \"&capital=\").concat(capital),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }\n    }, name)));\n  }))));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var result, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://restcountries.eu/rest/v2/all');\n\n        case 2:\n          result = _context.sent;\n          _context.next = 5;\n          return result.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Country Data Successfully Fetched! Length of Data is: \".concat(data.length));\n          console.log(\"  \");\n          console.log(\"Country Data: \".concat(JSON.stringify(data)));\n          return _context.abrupt(\"return\", {\n            countryData: data\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index; // import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n//   console.log(`Show data fetched. Count: ${data.length}`)\n//   return {\n//     shows: data\n//   }\n// }\n// export default Index\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Index","props","countryData","map","alpha2Code","name","capital","getInitialProps","result","json","data","console","log","length","JSON","stringify"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMA,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAsB;AAAA,QAAEC,UAAF,QAAEA,UAAF;AAAA,QAAcC,IAAd,QAAcA,IAAd;AAAA,QAAoBC,OAApB,QAAoBA,OAApB;AAAA,WACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,MAAC,IAAD;AAAM,MAAA,EAAE,aAAMF,UAAN,CAAR;AAA4B,MAAA,IAAI,wCAAiCA,UAAjC,mBAAoDC,IAApD,sBAAoEC,OAApE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAJ,CADJ,CADH,CADmB;AAAA,GAAtB,CADN,CANJ,CADJ,CADU;AAAA,CAAd;;KAAML,K;AAsBNA,KAAK,CAACO,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAECR,KAAK,CAAC,sCAAD,CAFN;;AAAA;AAEdS,UAAAA,MAFc;AAAA;AAAA,iBAGDA,MAAM,CAACC,IAAP,EAHC;;AAAA;AAGdC,UAAAA,IAHc;AAKpBC,UAAAA,OAAO,CAACC,GAAR,iEAAqEF,IAAI,CAACG,MAA1E;AACAF,UAAAA,OAAO,CAACC,GAAR;AACAD,UAAAA,OAAO,CAACC,GAAR,yBAA6BE,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA7B;AAPoB,2CASb;AACHR,YAAAA,WAAW,EAAEQ;AADV,WATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAeA,eAAeV,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            <br></br>\n            <h1>REST Countries API : HOME</h1>\n            <hr></hr>\n\n            <ul>\n                 {props.countryData.map(({alpha2Code, name, capital}) => (\n                     <li>\n                        <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}&capital=${capital}`} >\n                            <a>{name}</a>\n                        </Link>\n                     </li>\n                ))}\n            </ul>\n\n        </div>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n\n    const result = await fetch('https://restcountries.eu/rest/v2/all');\n    const data = await result.json();\n\n    console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n    console.log(`  `);\n    console.log(`Country Data: ${JSON.stringify(data)}`);\n\n    return {\n        countryData: data\n    };\n\n};\n\nexport default Index;\n\n// import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n\n//   console.log(`Show data fetched. Count: ${data.length}`)\n\n//   return {\n//     shows: data\n//   }\n// }\n\n// export default Index"]},"metadata":{},"sourceType":"module"}