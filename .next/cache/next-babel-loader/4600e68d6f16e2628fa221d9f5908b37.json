{"ast":null,"code":"var _jsxFileName = \"/Users/byrongeo/Desktop/countries-api/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, __jsx(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}, \"REST Countries API Home\"), __jsx(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}, props.countryData.map(({\n  name,\n  alpha2Code\n}) => __jsx(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 22\n  }\n}, __jsx(Link, {\n  as: `/${alpha2Code}`,\n  href: `/selectedCountry?alpha2Code=${alpha2Code}&name=${name}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 29\n  }\n}, name)))))));\n\nIndex.getInitialProps = async function () {\n  const result = await fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n  const data = await result.json();\n  console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n  console.log(`  `);\n  console.log(`Country Data: ${JSON.stringify(data)}`);\n  return {\n    countryData: data\n  };\n};\n\nexport default Index; // import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n//   console.log(`Show data fetched. Count: ${data.length}`)\n//   return {\n//     shows: data\n//   }\n// }\n// export default Index","map":{"version":3,"sources":["/Users/byrongeo/Desktop/countries-api/pages/index.js"],"names":["Layout","Link","fetch","Index","props","countryData","map","name","alpha2Code","getInitialProps","result","data","json","console","log","length","JSON","stringify"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACMA,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAsB,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,MAAC,IAAD;AAAM,EAAA,EAAE,EAAG,IAAGA,UAAW,EAAzB;AAA4B,EAAA,IAAI,EAAG,+BAA8BA,UAAW,SAAQD,IAAK,EAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,IAAJ,CADJ,CADH,CADH,CADN,CALJ,CADJ,CADJ;;AAqBAJ,KAAK,CAACM,eAAN,GAAwB,kBAAiB;AAErC,QAAMC,MAAM,GAAG,MAAMR,KAAK,CAAC,kDAAD,CAA1B;AACA,QAAMS,IAAI,GAAG,MAAMD,MAAM,CAACE,IAAP,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,yDAAwDH,IAAI,CAACI,MAAO,EAAjF;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAb;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBE,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAqB,EAAlD;AAEA,SAAO;AACHN,IAAAA,WAAW,EAAEM;AADV,GAAP;AAIH,CAbD;;AAeA,eAAeR,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = (props) => (\n    <Layout>\n        <div>\n\n            <h3>REST Countries API Home</h3>\n            <hr></hr>\n\n            <ul>\n                 {props.countryData.map(({name, alpha2Code}) => (\n                     <li>\n                        <Link as={`/${alpha2Code}`} href={`/selectedCountry?alpha2Code=${alpha2Code}&name=${name}`} >\n                            <a>{name}</a>\n                        </Link>\n                     </li>\n                ))}\n            </ul>\n\n        </div>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n\n    const result = await fetch('https://restcountries.eu/rest/v2/regionalbloc/eu');\n    const data = await result.json();\n\n    console.log(`Country Data Successfully Fetched! Length of Data is: ${data.length}`);\n    console.log(`  `);\n    console.log(`Country Data: ${JSON.stringify(data)}`);\n\n    return {\n        countryData: data\n    };\n\n};\n\nexport default Index;\n\n// import Layout from '../components/Layout.js'\n// import Link from 'next/link'\n// /*First of all we need to install isomorphic-unfetch. \n// That's the library we are going to use to fetch data. \n// It's a simple implementation of the browser fetch API, but works both in client and server environments. */\n// import fetch from 'isomorphic-unfetch'\n\n// const Index = (props) => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(({show}) => (\n//         <li key={show.id}>\n//           <Link as={`/${show.id}`} href={`/selectedCountry?id=${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// )\n\n// /*In practice, we usually need to fetch data from a remote data source. \n// Next.js comes with a standard API to fetch data for pages. \n// We do it using an async function called getInitialProps.\n// With that, we can fetch data for a given page via a remote data source and pass it as props to our page. \n// We can write our getInitialProps to work on both server and the client. So, Next.js can use it on both client and server.\n// In the code below, we are fetching Batman TV shows and passing them into our page as the 'shows' prop. */\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n//   const data = await res.json()\n\n//   console.log(`Show data fetched. Count: ${data.length}`)\n\n//   return {\n//     shows: data\n//   }\n// }\n\n// export default Index"]},"metadata":{},"sourceType":"module"}